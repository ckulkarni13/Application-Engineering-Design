/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.admin;

import constants.GrantStatus;
import java.awt.Color;
import java.util.List;
import java.util.StringJoiner;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.researcher.Grant;
import model.researcher.ResearchGroup;
import model.researcher.Researcher;
import ui.MainJFrame;

/**
 *
 * @author drag
 */
public class GrantApplications extends javax.swing.JPanel {

	MainJFrame ws;
	JPanel csp;

	/**
	 * Creates new form GrantApplications
	 */
	public GrantApplications(MainJFrame ws, JPanel csp) {
		this.ws = ws;
		this.csp = csp;
		initComponents();
		setBackground(Color.WHITE);

		tbl.setRowHeight(30);
		tbl.getColumnModel().getColumn(5).setMaxWidth(0);

		populateTbl();

	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                pageTitle = new javax.swing.JLabel();
                jLabel1 = new javax.swing.JLabel();
                jLabel2 = new javax.swing.JLabel();
                jLabel3 = new javax.swing.JLabel();
                txtRejected = new javax.swing.JLabel();
                txtTotal = new javax.swing.JLabel();
                txtAccepted = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                tbl = new javax.swing.JTable();
                btnSave = new javax.swing.JButton();

                pageTitle.setFont(new java.awt.Font("FreeSans", 1, 24)); // NOI18N
                pageTitle.setText("Grant applications");

                jLabel1.setText("Total applications");

                jLabel2.setText("Accepted grants");

                jLabel3.setText("Rejected grants");

                txtRejected.setFont(new java.awt.Font("FreeSans", 1, 36)); // NOI18N

                txtTotal.setFont(new java.awt.Font("FreeSans", 1, 36)); // NOI18N

                txtAccepted.setFont(new java.awt.Font("FreeSans", 1, 36)); // NOI18N

                tbl.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null, null, null},
                                {null, null, null, null, null, null},
                                {null, null, null, null, null, null},
                                {null, null, null, null, null, null}
                        },
                        new String [] {
                                "Paper name", "Collaborators", "Amount", "Status", "Comment", ""
                        }
                ) {
                        boolean[] canEdit = new boolean [] {
                                false, false, false, true, true, false
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                tbl.setColumnSelectionAllowed(true);
                jScrollPane1.setViewportView(tbl);
                tbl.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
                if (tbl.getColumnModel().getColumnCount() > 0) {
                        tbl.getColumnModel().getColumn(5).setResizable(false);
                }

                btnSave.setBackground(new java.awt.Color(153, 102, 0));
                btnSave.setFont(new java.awt.Font("FreeSans", 1, 15)); // NOI18N
                btnSave.setForeground(new java.awt.Color(255, 255, 255));
                btnSave.setText("Save changes");
                btnSave.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnSaveActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(pageTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 917, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(113, 113, 113)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(193, 193, 193)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(txtAccepted, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(196, 196, 196)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(txtRejected, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(59, 59, 59)
                                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1016, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 78, Short.MAX_VALUE)))
                                .addContainerGap())
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(pageTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                        .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtRejected, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtAccepted, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(42, Short.MAX_VALUE))
                );
        }// </editor-fold>//GEN-END:initComponents

        private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
		int R = tbl.getRowCount();
		int C = tbl.getColumnCount();

		// NUID header is at index 0
		for (int i = 0; i < R; ++i) {
			for (int j = 0; j < C; ++j) {
				String updatedStatus = (String) tbl.getValueAt(i, 3);
				String comment = (String)tbl.getValueAt(i,4);
				comment = comment.length() > 0 ? comment : "N/A";
				String grantId= (String) tbl.getValueAt(i, 5);

				Grant g = this.ws.getResearchGroups().getGrantById(grantId);

				GrantStatus status = GrantStatus.UNDER_REVIEW;
				for (GrantStatus gs : GrantStatus.values()) {
					if (gs.toString().equalsIgnoreCase(updatedStatus)) status = gs;
				}

				g.setStatus(status);
				g.setComment(comment);
			}
		}
		populateTbl();
		JOptionPane.showMessageDialog(this, "Grant data saved and updated successfully");
        }//GEN-LAST:event_btnSaveActionPerformed


        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnSave;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JLabel jLabel3;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JLabel pageTitle;
        private javax.swing.JTable tbl;
        private javax.swing.JLabel txtAccepted;
        private javax.swing.JLabel txtRejected;
        private javax.swing.JLabel txtTotal;
        // End of variables declaration//GEN-END:variables

	private void populateTbl() {
		int accepted = 0, rejected = 0, total = 0;
		for (ResearchGroup rg : this.ws.getResearchGroups().getDir()) {
			for (Grant g : rg.getGrants()) {
				if (g.getStatus() == GrantStatus.ACCEPTED) {
					accepted++;
				}
				if (g.getStatus() == GrantStatus.REJECTED) {
					rejected++;
				}
				total++;
			}
		}

		txtAccepted.setText(String.valueOf(accepted));
		txtRejected.setText(String.valueOf(rejected));
		txtTotal.setText(String.valueOf(total));

		DefaultTableModel table = (DefaultTableModel) tbl.getModel();

		int n = table.getRowCount();
		while (n-- > 0) {
			table.removeRow(n);
		}

		Researcher r = this.ws.getResearcherDir().fetchByEmail(this.ws.getLoggedUser().getEmail());
		List<ResearchGroup> groups = this.ws.getResearchGroups().getDir();

		int i = 1;
		for (ResearchGroup rg : groups) {
			for (Grant g : rg.getGrants()) {
				Vector<String> row = new Vector<>();
				row.add(rg.getPaper().getTitle());
				row.add(listToString(rg.getGroup()));
				row.add(g.getAmount());
				row.add(g.getStatus().toString());
				row.add(g.getComment());
				row.add(g.getUuid());

				table.addRow(row);
			}
		}
	}

	public static String listToString(List<Researcher> list) {
		StringJoiner joiner = new StringJoiner(", ");
		for (Researcher r : list) {
			joiner.add(r.getUser().getFirstName() + " " + r.getUser().getLastName());

		}
		return joiner.toString();
	}
}
