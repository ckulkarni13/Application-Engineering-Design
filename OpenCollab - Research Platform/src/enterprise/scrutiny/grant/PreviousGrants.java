/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package enterprise.scrutiny.grant;

import java.awt.Color;
import java.util.List;
import java.util.Vector;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.researcher.Grant;
import model.researcher.ResearchGroup;
import model.researcher.Researcher;
import ui.MainJFrame;

/**
 *
 * @author drag
 */
public class PreviousGrants extends javax.swing.JPanel {

	MainJFrame ws;
	JPanel csp;
	Researcher r;

	/**
	 * Creates new form PreviousGrants
	 */
	public PreviousGrants(MainJFrame ws, JPanel csp) {
		this.ws = ws;
		this.csp = csp;
		this.r = this.ws.getResearcherDir().fetchByUser(this.ws.getLoggedUser());
		initComponents();
		setBackground(Color.WHITE);

		tbl.setRowHeight(30);

		populateTbl();
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                pageTitle = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                tbl = new javax.swing.JTable();
                btnBack2 = new javax.swing.JButton();

                pageTitle.setFont(new java.awt.Font("FreeSans", 1, 24)); // NOI18N
                pageTitle.setText("Grant history");

                tbl.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null, null},
                                {null, null, null, null, null},
                                {null, null, null, null, null},
                                {null, null, null, null, null}
                        },
                        new String [] {
                                "Research paper", "Grant amount", "Status", "Comment", "Date"
                        }
                ) {
                        boolean[] canEdit = new boolean [] {
                                false, false, false, false, false
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                tbl.setColumnSelectionAllowed(true);
                jScrollPane1.setViewportView(tbl);
                tbl.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

                btnBack2.setBackground(new java.awt.Color(255, 255, 255));
                btnBack2.setFont(new java.awt.Font("FreeSans", 1, 15)); // NOI18N
                btnBack2.setForeground(new java.awt.Color(51, 51, 51));
                btnBack2.setText("<< Back");
                btnBack2.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                btnBack2ActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(pageTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnBack2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1018, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(53, Short.MAX_VALUE))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(pageTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnBack2)
                                .addContainerGap(22, Short.MAX_VALUE))
                );
        }// </editor-fold>//GEN-END:initComponents

        private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed
                // TODO add your handling code here:
                csp.remove(this);
                ((java.awt.CardLayout) csp.getLayout()).next(csp);
        }//GEN-LAST:event_btnBack2ActionPerformed


        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton btnBack2;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JLabel pageTitle;
        private javax.swing.JTable tbl;
        // End of variables declaration//GEN-END:variables

	private void populateTbl() {
		DefaultTableModel table = (DefaultTableModel) tbl.getModel();

		int n = table.getRowCount();
		while (n-- > 0) {
			table.removeRow(n);
		}

//		List<ResearchPaper> papers= this.ws.getPaperDir().getDir();
		List<ResearchGroup> groups = this.ws.getResearchGroups().getDirByResearcher(r);

		int i = 1;
		for (ResearchGroup g : groups) {
			for (Grant gr : g.getGrants()) {

				Vector<String> row = new Vector<>();
				row.add(g.getPaper().getTitle());
				row.add(gr.getAmount());
				row.add(gr.getStatus().toString());
				row.add(gr.getComment());
				row.add(gr.getGrantedDate());

				table.addRow(row);
			}
		}
	}
}
