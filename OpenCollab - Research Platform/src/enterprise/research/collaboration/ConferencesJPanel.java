/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package enterprise.research.collaboration;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.util.List;
import java.util.Vector;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.researcher.Researcher;
import model.scrutiny.Conference;
import ui.ButtonCellRenderer;
import ui.MainJFrame;

/**
 *
 * @author drag
 */
public class ConferencesJPanel extends javax.swing.JPanel {

	MainJFrame ws;
	JPanel csp;
	Researcher researcher;

	/**
	 * Creates new form ConferencesJPanel
	 */
	public ConferencesJPanel(MainJFrame ws, JPanel cep) {
		this.ws = ws;
		this.csp = csp;
		this.researcher = ws.getResearcherDir().fetchByUser(ws.getLoggedUser());
		initComponents();

		setBackground(Color.WHITE);

		tbl.setRowHeight(30);
		tbl.getColumnModel().getColumn(4).setMaxWidth(0);

		Action actionAttend = new AbstractAction() {
			public void actionPerformed(ActionEvent e) {
				try {
					int selectedRowIndex = tbl.getSelectedRow();
					String confId = (String) tbl.getValueAt(selectedRowIndex, 4);
					Conference conf = ws.getConferenceDir().fetchById(confId);

					researcher.addConference(conf);
					System.out.println("working or what?");
					populateTbl();

				} catch (Exception exception) {
					exception.printStackTrace();
					JOptionPane.showMessageDialog(null, "There was an issue. Please try again.");
				}
			}
		};

		ButtonCellRenderer completeButton = new ButtonCellRenderer(tbl, actionAttend, 3);

		populateTbl();
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jScrollPane1 = new javax.swing.JScrollPane();
                tbl = new javax.swing.JTable();
                pageTitle = new javax.swing.JLabel();

                tbl.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                                {null, null, null, null, null},
                                {null, null, null, null, null},
                                {null, null, null, null, null},
                                {null, null, null, null, null}
                        },
                        new String [] {
                                "Name", "Date", "Venue", "Attend", ""
                        }
                ) {
                        boolean[] canEdit = new boolean [] {
                                false, false, false, true, false
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                tbl.setColumnSelectionAllowed(true);
                jScrollPane1.setViewportView(tbl);
                tbl.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

                pageTitle.setFont(new java.awt.Font("FreeSans", 1, 24)); // NOI18N
                pageTitle.setForeground(new java.awt.Color(51, 51, 51));
                pageTitle.setText("Conferences near you!");

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1082, Short.MAX_VALUE)
                                        .addComponent(pageTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(18, Short.MAX_VALUE))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(pageTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(70, Short.MAX_VALUE))
                );
        }// </editor-fold>//GEN-END:initComponents


        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JLabel pageTitle;
        private javax.swing.JTable tbl;
        // End of variables declaration//GEN-END:variables

	private void populateTbl() {
		DefaultTableModel table = (DefaultTableModel) tbl.getModel();

		int n = table.getRowCount();
		while (n-- > 0) {
			table.removeRow(n);
		}

		List<Conference> confs = this.ws.getConferenceDir().getDir();

		int i = 1;
		for (Conference c : confs) {
			Vector<String> row = new Vector<>();
			row.add(c.getTitle());
			row.add(c.getDate());
			row.add(c.getVenue());
			if (researcher.hasAttendedConference(c)) {
				row.add("Attended");
			} else {

				row.add("Attend");
			}
			row.add(c.getId());

			table.addRow(row);
		}
	}
}
